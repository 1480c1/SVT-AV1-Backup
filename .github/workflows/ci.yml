name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      fail-fast: false
      matrix:
        compiler: ['gcc-7', 'gcc-8', 'gcc-9', 'clang-6', 'clang-10']
        include:
          - compiler: gcc-7
            packages: gcc-7 g++-7
            env: { 'CC': 'gcc-7', 'CXX': 'g++-7' }
          - compiler: gcc-8
            packages: gcc-8 g++-8
            env: { 'CC': 'gcc-8', 'CXX': 'g++-8' }
          - compiler: gcc-9
            packages: gcc-9 g++-9
            env: { 'CC': 'gcc-9', 'CXX': 'g++-9' }
          - compiler: clang-6
            packages: ''
            env: { 'CC': 'clang-6.0', 'CXX': 'clang++-6.0' }
          - compiler: clang-10
            packages: 'clang-10'
            env: { 'CC': 'clang-10', 'CXX': 'clang++-10' }

    env: ${{ matrix.env }}

    steps:
    - name: Add Clang apt repository
      if: matrix.compiler == 'clang-10'
      run: |
        echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main" \
        | sudo tee -a /etc/apt/sources.list.d/llvm.list
        curl -L https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-get update
    - name: Install dependencies
      run: sudo apt-get install -y ${{ matrix.packages }} nasm yasm cmake
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Compile SVT-AV1
      run: |
        ./Build/linux/build.sh static
        ./Bin/Release/SvtAv1EncApp -help
    - name: Compress SVT-AV1 binaries
      if: matrix.compiler == 'gcc-9'
      run: tar czf ./svtav1-current.tar.gz ./Bin/Release/*
    - name: Upload artifact SVT-AV1 (current)
      if: matrix.compiler == 'gcc-9'
      uses: actions/upload-artifact@v1
      with:
        name: svtav1-current
        path: ./svtav1-current.tar.gz


  # Compile and run tests in shards with only one compiler
  unit-tests:
    runs-on: ubuntu-18.04
    env: { 'CC': 'gcc-9', 'CXX': 'g++-9' }
    strategy:
      matrix:
        index: [ 0, 1, 2, 3, 4, 5, 6, 7 ]
    name: 'Unit Tests (Ubuntu 18.04, GCC 9.x) Shard ${{ matrix.index }}'
    steps:
      - name: Install dependencies
        run: sudo apt-get install -y nasm yasm cmake gcc-9 g++-9
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Compile SVT-AV1 (Release, Tests)
        run: ./Build/linux/build.sh release test
      - name: Run unit tests shard
        run: env GTEST_TOTAL_SHARDS=8 GTEST_SHARD_INDEX=${{ matrix.index }} ./Bin/Release/SvtAv1UnitTests

  e2e-tests:
    runs-on: ubuntu-18.04
    env: { 'CC': 'gcc-9', 'CXX': 'g++-9' }
    strategy:
      matrix:
        index: [ 0, 1, 2, 3, 4, 5, 6, 7 ]
    name: 'E2E Tests (Ubuntu 18.04, GCC 9.x) Shard ${{ matrix.index }}'
    steps:
      - name: Install dependencies
        run: sudo apt-get install -y nasm yasm cmake gcc-9 g++-9
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Compile SVT-AV1 (Release, Tests and TestVectors)
        run: |
          ./Build/linux/build.sh release test
          pushd ./Build/linux/Release
          make TestVectors
          popd
      - name: Run unit tests shard
        run: env SVT_AV1_TEST_VECTOR_PATH="./test/vectors" GTEST_TOTAL_SHARDS=8 GTEST_SHARD_INDEX=${{ matrix.index }} ./Bin/Release/SvtAv1E2ETests --gtest_filter=-*DummySrcTest*
